package com.example.demo.usr.domain;

import java.util.Collection;
import java.util.List;

import org.springframework.context.annotation.Lazy;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.stereotype.Component;

import lombok.Getter;

@Component @Lazy @Getter
public class UserDto implements UserDetails{
	private static final long serialVersionUID = 1L;
	private long usrNo;
	private String usrName;
	private String usrEmail;
	private String usrPwd;
	private String usrAges;
	private String usrCity;
	private String usrGender;
	private String usrPhone;
	private String usrAddr;
	private String usrNickname;
	
	private Collection<? extends GrantedAuthority> autorities;
	
	public UserDto() {
		// TODO Auto-generated constructor stub
	}
	
	public UserDto(String usrName, String usrEmail, String usrPwd, 
			Collection<? extends GrantedAuthority> autorities, String usrPhone) {
		super();
		this.usrName = usrName;
		this.usrEmail = usrEmail;
		this.usrPwd = usrPwd;
		this.usrPhone = usrPhone;
		this.autorities = autorities;
	}
	
	public static UserDto create(User User) {
		List<GrantedAuthority> autorities  = 
			user	
	} 
	
	@Override
	public Collection<? extends GrantedAuthority> getAuthorities() {
		return null;
	}
	@Override
	public String getPassword() {
		return null;
	}
	@Override
	public String getUsername() {
		return null;
	}
	@Override
	public boolean isAccountNonExpired() {
		return false;
	}
	@Override
	public boolean isAccountNonLocked() {
		return false;
	}
	@Override
	public boolean isCredentialsNonExpired() {
		return false;
	}
	@Override
	public boolean isEnabled() {
		return false;
	}




}